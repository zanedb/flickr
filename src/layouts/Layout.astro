---
import '../styles/global.css'
import { ClientRouter } from 'astro:transitions'
import SFX from '../components/SFX.astro'
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/ico" href="/favicon.ico" />
    <meta name="generator" content={Astro.generator} />
    <title>Flickr: Explore!</title>
    <ClientRouter />
  </head>
  <body>
    <slot />
    <SFX />
  </body>
</html>

<script is:inline>
  /*
    Scroll position persistence
  */
  const getPageKey = () => {
    return `scrollPos_${window.location.pathname}${window.location.search}`
  }

  const saveScrollPosition = () => {
    const scrollPos = {
      x: window.scrollX,
      y: window.scrollY,
    }

    // Only save scroll pos on gallery (for now)
    if (window.location.pathname !== '/') return

    sessionStorage.setItem(getPageKey(), JSON.stringify(scrollPos))
  }

  const restoreScrollPosition = () => {
    const scrollPosJson = sessionStorage.getItem(getPageKey())

    if (scrollPosJson) {
      try {
        const scrollPos = JSON.parse(scrollPosJson)
        window.scrollTo(scrollPos.x, scrollPos.y)
      } catch (e) {
        console.error('Failed to parse saved scroll position', e)
        window.scrollTo(0, 0)
      }
    }
  }

  // Listeners for navigation away, page swap, and initial load
  window.addEventListener('beforeunload', saveScrollPosition)
  document.addEventListener('astro:before-swap', saveScrollPosition)
  document.addEventListener('DOMContentLoaded', restoreScrollPosition)
  document.addEventListener('astro:after-swap', restoreScrollPosition)
  document.addEventListener('astro:page-load', restoreScrollPosition)

  // Save position periodically to handle cases like browser crashes
  setInterval(saveScrollPosition, 1000)

  /*
    Global Sound FX
  */
  const play = (fx, vol = 0.7) => {
    const sound = new Audio(`/sfx/${fx}.mp3`)
    sound.volume = vol
    sound.play()
  }

  // Click FX on any click
  document.addEventListener('click', (e) => play('click', 0.5))

  document.addEventListener('astro:page-load', () => {
    // Shutter FX on image click
    const flicks = document.querySelectorAll('img[data-click-sfx="true"]')
    flicks.forEach((i) => {
      i.addEventListener('click', (e) => {
        // 30% chance of shutter sound, with 400-800ms delay
        if (Math.random() < 0.3) {
          setTimeout(
            () => play('shutter'),
            Math.floor(Math.random() * 401) + 400
          )
        }
      })
    })
    })
  })

  /*
    Global sound FX
  */
  document.addEventListener('DOMContentLoaded', () => {
    const bg = new Audio(`/sfx/rain.mp3`)
    bg.volume = 0.2
    bg.loop = true
    // bg.play()
  })
</script>
